"use strict";(()=>{var e={};e.id=9931,e.ids=[9931],e.modules={3524:e=>{e.exports=require("@prisma/client")},399:e=>{e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},8869:(e,r,t)=>{t.r(r),t.d(r,{originalPathname:()=>y,patchFetch:()=>g,requestAsyncStorage:()=>h,routeModule:()=>p,serverHooks:()=>x,staticGenerationAsyncStorage:()=>m});var s={};t.r(s),t.d(s,{DELETE:()=>d,GET:()=>u,POST:()=>l});var o=t(3278),n=t(5002),a=t(4877),i=t(1309),c=t(4738);async function u(e){try{let{searchParams:r}=new URL(e.url),t=r.get("year"),s={examType:r.get("examType")||"CONCOURS"};if(t&&(s.year=parseInt(t)),!c._)return i.NextResponse.json({error:"Database not configured (missing DATABASE_URL)"},{status:503});let o=await c._.concoursThreshold.findMany({where:s,orderBy:[{year:"desc"},{wilaya:"asc"}]});return i.NextResponse.json({success:!0,data:o})}catch(e){return console.error("Error fetching concours thresholds:",e),i.NextResponse.json({error:"Failed to fetch thresholds"},{status:500})}}async function l(e){try{let{year:r,examType:t,wilaya:s,threshold:o,description:n}=await e.json();if(!r||!t||void 0===o)return i.NextResponse.json({error:"Year, examType, and threshold are required"},{status:400});if(!c._)return i.NextResponse.json({error:"Database not configured (missing DATABASE_URL)"},{status:503});let a=await c._.concoursThreshold.upsert({where:{year_examType_wilaya:{year:parseInt(r),examType:t,wilaya:s||null}},update:{threshold:parseFloat(o),description:n,updatedAt:new Date},create:{year:parseInt(r),examType:t,wilaya:s||null,threshold:parseFloat(o),description:n}});return i.NextResponse.json({success:!0,data:a})}catch(e){return console.error("Error creating/updating concours threshold:",e),i.NextResponse.json({error:"Failed to save threshold"},{status:500})}}async function d(e){try{let{searchParams:r}=new URL(e.url),t=r.get("id");if(!t)return i.NextResponse.json({error:"Threshold ID required"},{status:400});if(!c._)return i.NextResponse.json({error:"Database not configured (missing DATABASE_URL)"},{status:503});return await c._.concoursThreshold.delete({where:{id:t}}),i.NextResponse.json({success:!0})}catch(e){return console.error("Error deleting concours threshold:",e),i.NextResponse.json({error:"Failed to delete threshold"},{status:500})}}let p=new o.AppRouteRouteModule({definition:{kind:n.x.APP_ROUTE,page:"/api/admin/concours-thresholds/route",pathname:"/api/admin/concours-thresholds",filename:"route",bundlePath:"app/api/admin/concours-thresholds/route"},resolvedPagePath:"D:\\WORK\\FREELANCER\\student-result-upgraded\\app\\api\\admin\\concours-thresholds\\route.ts",nextConfigOutput:"standalone",userland:s}),{requestAsyncStorage:h,staticGenerationAsyncStorage:m,serverHooks:x}=p,y="/api/admin/concours-thresholds/route";function g(){return(0,a.patchFetch)({serverHooks:x,staticGenerationAsyncStorage:m})}},4738:(e,r,t)=>{t.d(r,{_:()=>n});var s=t(3524);let o=globalThis,n=(()=>{if(process.env.DATABASE_URL)return o.prisma??new s.PrismaClient({log:["error"],datasources:{db:{url:process.env.DATABASE_URL}},__internal:{engine:{connectionLimit:5,queryTimeout:15e3,connectionTimeout:5e3,pool:{min:1,max:5,acquireTimeoutMillis:15e3,createTimeoutMillis:15e3,destroyTimeoutMillis:3e3,idleTimeoutMillis:15e3,reapIntervalMillis:500,createRetryIntervalMillis:100}}}})})();n&&process.on("beforeExit",async()=>{try{await Promise.race([n.$disconnect(),new Promise(e=>setTimeout(e,5e3))])}catch(e){console.error("Error disconnecting Prisma:",e)}}),process.on("uncaughtException",async e=>{console.error("Uncaught Exception:",e);try{n&&await n.$disconnect()}catch(e){console.error("Error disconnecting Prisma on uncaught exception:",e)}process.exit(1)})}};var r=require("../../../../webpack-runtime.js");r.C(e);var t=e=>r(r.s=e),s=r.X(0,[9379,4833],()=>t(8869));module.exports=s})();
"use strict";(()=>{var e={};e.id=6403,e.ids=[6403],e.modules={3524:e=>{e.exports=require("@prisma/client")},399:e=>{e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},4112:(e,t,a)=>{a.r(t),a.d(t,{originalPathname:()=>y,patchFetch:()=>x,requestAsyncStorage:()=>c,routeModule:()=>l,serverHooks:()=>m,staticGenerationAsyncStorage:()=>p});var r={};a.r(r),a.d(r,{GET:()=>u});var o=a(3278),n=a(5002),i=a(4877),s=a(1309),d=a(4738);async function u(e){try{console.log("\uD83D\uDCCA Database info request received");let[e,t,a]=await Promise.all([d._.student.count(),d._.dataUpload.findMany({orderBy:[{year:"desc"},{examType:"asc"},{uploadedAt:"desc"}]}),d._.student.groupBy({by:["year","examType"],_count:{_all:!0},_avg:{moyenne:!0},orderBy:[{year:"desc"},{examType:"asc"}]})]),r={totalStudents:e,totalUploads:t.length,distinctYearTypes:a.length,totalDataSize:t.reduce((e,t)=>e+t.studentCount,0)},o={};for(let e of a){let a=`${e.examType} ${e.year}`,r=t.find(t=>t.year===e.year&&t.examType===e.examType);o[a]={year:e.year,examType:e.examType,studentCount:e._count._all,averageScore:e._avg.moyenne?Number(e._avg.moyenne.toFixed(2)):0,uploadInfo:r?{fileName:r.fileName,uploadedAt:r.uploadedAt,uploadId:r.id}:null}}let n=t.slice(0,10).map(e=>({id:e.id,fileName:e.fileName,year:e.year,examType:e.examType,studentCount:e.studentCount,uploadedAt:e.uploadedAt}));return s.NextResponse.json({status:"SUCCESS",summary:r,data:o,recentUploads:n,timestamp:new Date().toISOString()})}catch(e){return console.error("❌ Database info error:",e),s.NextResponse.json({status:"ERROR",error:"Failed to retrieve database information",details:e instanceof Error?e.message:"Unknown error",configured:!!process.env.DATABASE_URL,timestamp:new Date().toISOString()},{status:500})}}let l=new o.AppRouteRouteModule({definition:{kind:n.x.APP_ROUTE,page:"/api/admin/database-info/route",pathname:"/api/admin/database-info",filename:"route",bundlePath:"app/api/admin/database-info/route"},resolvedPagePath:"D:\\WORK\\FREELANCER\\student-result-upgraded\\app\\api\\admin\\database-info\\route.ts",nextConfigOutput:"standalone",userland:r}),{requestAsyncStorage:c,staticGenerationAsyncStorage:p,serverHooks:m}=l,y="/api/admin/database-info/route";function x(){return(0,i.patchFetch)({serverHooks:m,staticGenerationAsyncStorage:p})}},4738:(e,t,a)=>{a.d(t,{_:()=>n});var r=a(3524);let o=globalThis,n=(()=>{if(process.env.DATABASE_URL)return o.prisma??new r.PrismaClient({log:["error"],datasources:{db:{url:process.env.DATABASE_URL}},__internal:{engine:{connectionLimit:5,queryTimeout:15e3,connectionTimeout:5e3,pool:{min:1,max:5,acquireTimeoutMillis:15e3,createTimeoutMillis:15e3,destroyTimeoutMillis:3e3,idleTimeoutMillis:15e3,reapIntervalMillis:500,createRetryIntervalMillis:100}}}})})();n&&process.on("beforeExit",async()=>{try{await Promise.race([n.$disconnect(),new Promise(e=>setTimeout(e,5e3))])}catch(e){console.error("Error disconnecting Prisma:",e)}}),process.on("uncaughtException",async e=>{console.error("Uncaught Exception:",e);try{n&&await n.$disconnect()}catch(e){console.error("Error disconnecting Prisma on uncaught exception:",e)}process.exit(1)})}};var t=require("../../../../webpack-runtime.js");t.C(e);var a=e=>t(t.s=e),r=t.X(0,[9379,4833],()=>a(4112));module.exports=r})();
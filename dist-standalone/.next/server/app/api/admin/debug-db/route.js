"use strict";(()=>{var e={};e.id=6165,e.ids=[6165],e.modules={3524:e=>{e.exports=require("@prisma/client")},399:e=>{e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},6197:(e,t,r)=>{r.r(t),r.d(t,{originalPathname:()=>y,patchFetch:()=>b,requestAsyncStorage:()=>p,routeModule:()=>l,serverHooks:()=>g,staticGenerationAsyncStorage:()=>m});var n={};r.r(n),r.d(n,{GET:()=>d,dynamic:()=>u});var o=r(3278),a=r(5002),i=r(4877),s=r(1309),c=r(4738);let u="force-dynamic";async function d(){try{if(console.log("\uD83D\uDD0D Debug database request received"),!process.env.DATABASE_URL)return s.NextResponse.json({error:"DATABASE_URL not configured",env:"production"});if(!c._)return s.NextResponse.json({error:"Prisma client not initialized (missing DATABASE_URL)",env:"production"},{status:503});await c._.$connect(),console.log("✅ Database connection successful");let[e,t]=await Promise.all([c._.dataUpload.count(),c._.student.count()]),r=await c._.dataUpload.findMany({take:5,orderBy:{uploadedAt:"desc"},select:{id:!0,fileName:!0,year:!0,examType:!0,studentCount:!0,uploadedAt:!0}}),n=await c._.student.groupBy({by:["year","examType"],_count:{_all:!0},orderBy:[{year:"desc"},{examType:"asc"}]});return s.NextResponse.json({success:!0,database:{connected:!0,uploadsCount:e,studentsCount:t},latestUploads:r,studentsByExam:n,environment:"production",serverTime:new Date().toISOString()})}catch(e){return console.error("❌ Database debug error:",e),s.NextResponse.json({success:!1,error:e.message,database:{connected:!1},environment:"production",serverTime:new Date().toISOString()},{status:500})}finally{c._&&await c._.$disconnect()}}let l=new o.AppRouteRouteModule({definition:{kind:a.x.APP_ROUTE,page:"/api/admin/debug-db/route",pathname:"/api/admin/debug-db",filename:"route",bundlePath:"app/api/admin/debug-db/route"},resolvedPagePath:"D:\\WORK\\FREELANCER\\student-result-upgraded\\app\\api\\admin\\debug-db\\route.ts",nextConfigOutput:"standalone",userland:n}),{requestAsyncStorage:p,staticGenerationAsyncStorage:m,serverHooks:g}=l,y="/api/admin/debug-db/route";function b(){return(0,i.patchFetch)({serverHooks:g,staticGenerationAsyncStorage:m})}},4738:(e,t,r)=>{r.d(t,{_:()=>a});var n=r(3524);let o=globalThis,a=(()=>{if(process.env.DATABASE_URL)return o.prisma??new n.PrismaClient({log:["error"],datasources:{db:{url:process.env.DATABASE_URL}},__internal:{engine:{connectionLimit:5,queryTimeout:15e3,connectionTimeout:5e3,pool:{min:1,max:5,acquireTimeoutMillis:15e3,createTimeoutMillis:15e3,destroyTimeoutMillis:3e3,idleTimeoutMillis:15e3,reapIntervalMillis:500,createRetryIntervalMillis:100}}}})})();a&&process.on("beforeExit",async()=>{try{await Promise.race([a.$disconnect(),new Promise(e=>setTimeout(e,5e3))])}catch(e){console.error("Error disconnecting Prisma:",e)}}),process.on("uncaughtException",async e=>{console.error("Uncaught Exception:",e);try{a&&await a.$disconnect()}catch(e){console.error("Error disconnecting Prisma on uncaught exception:",e)}process.exit(1)})}};var t=require("../../../../webpack-runtime.js");t.C(e);var r=e=>t(t.s=e),n=t.X(0,[9379,4833],()=>r(6197));module.exports=n})();
"use strict";(()=>{var e={};e.id=7153,e.ids=[7153],e.modules={3524:e=>{e.exports=require("@prisma/client")},399:e=>{e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},1711:(e,t,a)=>{a.r(t),a.d(t,{originalPathname:()=>f,patchFetch:()=>x,requestAsyncStorage:()=>p,routeModule:()=>c,serverHooks:()=>y,staticGenerationAsyncStorage:()=>m});var r={};a.r(r),a.d(r,{DELETE:()=>d,GET:()=>u});var i=a(3278),n=a(5002),s=a(4877),l=a(1309);let o=new(a(3524)).PrismaClient;async function u(e,{params:t}){try{let e=t.fileId;console.log(`📥 File details request for ID: ${e}`);let a=await o.dataUpload.findUnique({where:{id:e}});if(!a)return l.NextResponse.json({error:"Fichier non trouv\xe9"},{status:404});let r=await o.student.aggregate({where:{year:a.year,examType:a.examType},_count:{_all:!0},_avg:{moyenne:!0}}),i=await o.student.count({where:{year:a.year,examType:a.examType,admis:!0}}),n=await o.student.findMany({where:{year:a.year,examType:a.examType},select:{section:!0},distinct:["section"]}),s=await o.student.groupBy({by:["matricule"],where:{year:a.year,examType:a.examType},_count:{matricule:!0},having:{matricule:{_count:{gt:1}}}}),u=await Promise.all(s.slice(0,10).map(async e=>{let t=await o.student.findMany({where:{matricule:e.matricule,year:a.year,examType:a.examType},select:{id:!0,nom_complet:!0,moyenne:!0,ecole:!0,rang:!0}});return{matricule:e.matricule,count:e._count.matricule,students:t}})),d=500*r._count._all,c={id:a.id,fileName:a.fileName,year:a.year,examType:a.examType,studentCount:a.studentCount,uploadedAt:a.uploadedAt,actualStudentCount:r._count._all,averageScore:r._avg.moyenne?Number(r._avg.moyenne.toFixed(2)):0,admittedCount:i,admissionRate:r._count._all>0?Number((i/r._count._all*100).toFixed(1)):0,sections:n.map(e=>e.section).filter(Boolean),status:r._count._all>0?"active":"no_data",file:{id:a.id,fileName:a.fileName,size:d,uploadedAt:a.uploadedAt,studentCount:r._count._all},duplicates:{totalDuplicates:s.reduce((e,t)=>e+(t._count.matricule-1),0),totalGroups:s.length,duplicateGroups:u}};return l.NextResponse.json({success:!0,file:c})}catch(e){return console.error("❌ Error fetching file details:",e),l.NextResponse.json({error:"Erreur lors de la r\xe9cup\xe9ration des d\xe9tails du fichier",details:e.message},{status:500})}}async function d(e,{params:t}){try{let e=t.fileId;console.log(`🗑️ Delete file request for ID: ${e}`);let a=await o.dataUpload.findUnique({where:{id:e}});if(!a)return l.NextResponse.json({error:"Fichier non trouv\xe9"},{status:404});let r=await o.$transaction(async t=>{let r=await t.student.deleteMany({where:{year:a.year,examType:a.examType}});return await t.dataUpload.delete({where:{id:e}}),{deletedStudents:r.count,deletedUpload:a}});return console.log(`✅ Successfully deleted file and ${r.deletedStudents} students`),l.NextResponse.json({success:!0,message:`Fichier supprim\xe9 avec succ\xe8s. ${r.deletedStudents} \xe9tudiants supprim\xe9s.`,deletedFile:{id:a.id,fileName:a.fileName,year:a.year,examType:a.examType,deletedStudentsCount:r.deletedStudents}})}catch(e){return console.error("❌ Error deleting file:",e),l.NextResponse.json({error:"Erreur lors de la suppression du fichier",details:e.message},{status:500})}}let c=new i.AppRouteRouteModule({definition:{kind:n.x.APP_ROUTE,page:"/api/admin/files/[fileId]/route",pathname:"/api/admin/files/[fileId]",filename:"route",bundlePath:"app/api/admin/files/[fileId]/route"},resolvedPagePath:"D:\\WORK\\FREELANCER\\student-result-upgraded\\app\\api\\admin\\files\\[fileId]\\route.ts",nextConfigOutput:"standalone",userland:r}),{requestAsyncStorage:p,staticGenerationAsyncStorage:m,serverHooks:y}=c,f="/api/admin/files/[fileId]/route";function x(){return(0,s.patchFetch)({serverHooks:y,staticGenerationAsyncStorage:m})}}};var t=require("../../../../../webpack-runtime.js");t.C(e);var a=e=>t(t.s=e),r=t.X(0,[9379,4833],()=>a(1711));module.exports=r})();